name: BUILD & PUSH DOCKER IMAGE

on:
  push:
    branches:
      - main

jobs:
  create-release:
    name: CREATE NEW RELEASE
    if: contains( github.ref, 'main')
    runs-on: ubuntu-latest
    outputs:
      git_tag: ${{ steps.tag_version.outputs.new_tag }}
      version: ${{ steps.tag_version.outputs.new_version }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: major
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
  publish-docker-image:
    name: BUILD AND PUBLISH DOCKER IMAGE
    if: contains( github.ref, 'main')
    runs-on: ubuntu-latest
    needs: [create-release]
    outputs:
      useVersion: ${{steps.projectVersion.outputs.value}}
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          ref: ${{needs.create-release.outputs.git_tag}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm/v7, linux/arm64/v8, linux/amd64
          push: true
          context: .
          tags: |
            vertrou/pihole-unbound:latest
            vertrou/pihole-unbound:${{needs.create-release.outputs.version}}
            ghcr.io/vertrou/pihole-unbound:${{needs.create-release.outputs.version}}
            ghcr.io/vertrou/pihole-unbound:latest

          